<?php

namespace App\Api\V1\Controllers\Admin;

use App\Api\V1\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Throwable;

/**
 * Referral code Controller
 *
 * @package App\Api\V1\Controllers\Application
 */
class SummaryController extends Controller
{
    /**
     * Get referral and codes summary listing
     *
     * @OA\Get(
     *     path="/summary-listing",
     *     description="Get referral programm summary listing",
     *     tags={"Summary"},
     *
     *     security={{
     *         "default": {
     *             "ManagerRead",
     *             "User",
     *             "ManagerWrite"
     *         }
     *     }},
     *
     *     @OA\Response(
     *         response="200",
     *         description="TOP 1000 of leaders in the invitation referrals",
     *
     *         @OA\JsonContent(
     *             @OA\Property(
     *                 property="data",
     *                 type="object",
     *                 @OA\Property(
     *                     property="name",
     *                     type="string",
     *                     description="user name",
     *                     example=10,
     *                 ),
     *                 @OA\Property(
     *                     property="country",
     *                     type="string",
     *                     description="user country",
     *                     example=10,
     *                 ),
     *                 @OA\Property(
     *                     property="totalReferrals",
     *                     type="integer",
     *                     description="Total referrals by user",
     *                     example=10,
     *                 ),
     *                 @OA\Property(
     *                     property="totalCodesGenerated",
     *                     type="integer",
     *                     description="Total codes generated by user",
     *                     example=10,
     *                 ),
     *                 @OA\Property(
     *                     property="topReferralBonus",
     *                     type="integer",
     *                     description="Top referral bonus",
     *                     example=645000,
     *                 ),
     *                 @OA\Property(
     *                      property="amountEarned",
     *                      type="integer",
     *                      description="Amount earned by user",
     *                      example=450000,
     *                 ),
     *                 @OA\Property(
     *                      property="rank",
     *                      type="integer",
     *                      description="Rank of user",
     *                      example=450000,
     *                 ),
     *             ),
     *         ),
     *     ),
     *     @OA\Response(
     *         response="401",
     *         description="Unauthorized"
     *     ),
     *     @OA\Response(
     *         response=400,
     *         description="Invalid request"
     *     ),
     *     @OA\Response(
     *         response="404",
     *         description="User not found",
     *     ),
     *     @OA\Response(
     *         response="500",
     *         description="Unknown error"
     *     )
     * )
     *
     * @param Request $request
     *
     * @return mixed
     */
    public function listing(Request $request): mixed
    {
        try {
            $totalCodesGenerated = DB::table('referral_codes')
                ->select('user_id', DB::raw('COUNT(*) as totalCodesGenerated'))
                ->groupBy('user_id');
            $topReferralBonus = DB::table('totals')
                ->select('user_id', DB::raw('SUM(reward) as topReferralBonus'))
                ->groupBy('user_id')
                ->orderBy('topReferralBonus', 'desc')
                ->limit(1);
            $amountEarned = DB::table('totals')
                ->select('user_id', DB::raw('SUM(reward) as amountEarned'))
                ->groupBy('user_id');
            $rank = DB::table('totals')
                ->select('user_id', DB::raw('DENSE_RANK() OVER (ORDER BY SUM(reward) DESC) rank'));


            $summary = DB::table('users')
                ->whereNotNull('referrer_id')->distinct('referrer_id')
                ->select(
                    'name',
                    'country',
                    DB::raw('COUNT(referrer_id) as totalReferrals'),
                    'codesGenerated.totalCodesGenerated as totalCodesGenerated',
                    'topBonus.topReferralBonus as topReferralBonus',
                    'amountEarned.amountEarned as amountEarned',
                    'rank.rank as rank',
                )
                ->joinSub($totalCodesGenerated, 'codesGenerated', function ($join) {
                    $join->on('users.referrer_id', '=', 'codesGenerated.user_id');
                })
                ->joinSub($topReferralBonus, 'topBonus', function ($join) {
                })
                ->joinSub($amountEarned, 'amountEarned', function ($join) {
                    $join->on('users.referrer_id', '=', 'amountEarned.user_id');
                })
                ->joinSub($rank, 'rank', function ($join) {
                    $join->on('users.referrer_id', '=', 'rank.user_id');
                })
                ->groupBy(
                    'users.name', 'users.country', 'codesGenerated.totalCodesGenerated',
                    'topBonus.topReferralBonus',
                    'amountEarned.amountEarned',
                    'rank.rank'
                )
                ->orderBy('amountEarned', 'desc')
                ->paginate(request()->get('limit', config('settings.pagination_limit')));


            return response()->jsonApi([
                'type' => 'success',
                'title' => "List referral and codes summary",
                'message' => 'Referral and codes summary successfully received',
                'data' => $summary,
            ], 200);
        } catch (Throwable $e) {
            return response()->jsonApi([
                'type' => 'danger',
                'title' => "Not received list",
                'message' => $e->getMessage(),
            ], 404);
        }
    }
}
