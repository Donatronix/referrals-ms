openapi: 3.0.0
info:
  title: 'Communications API Microservice'
  description: 'Communications API Microservice, Version v1'
  contact:
    name: 'Support Team'
    email: support@ultainfinity.com
  version: v1
servers:
  -
    url: 'https://ec2-34-222-135-135.us-west-2.compute.amazonaws.com:18112/v1'
    description: 'Communications API Microservice, Version v1'
paths:
  /admin/template:
    get:
      tags:
        - Template
      summary: 'Template Controller'
      description: 'Get templates'
      operationId: c94229990039cc8a7b20837ab981883b
      parameters:
        -
          name: limit
          in: query
          description: 'count ot cards in return'
          required: false
          schema:
            type: integer
            default: 20
        -
          name: page
          in: query
          description: 'page of list'
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: 'List of all templates'
        '401':
          description: Unauthorized
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
    post:
      tags:
        - Template
      summary: 'Template Controller'
      description: 'Save template'
      operationId: 7e3639d7284bb3de4b0790319f70585f
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                id:
                  description: 'Template ID. Empty for new template'
                  type: integer
                  example: '1'
                title:
                  description: 'Template title'
                  type: string
                  example: test1
                html:
                  description: 'Template html'
                  type: string
                  example: test2
              type: object
      responses:
        '200':
          description: 'Save successfull'
        '401':
          description: Unauthorized
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
  /admin/referrals-list:
    get:
      tags:
        - Admin
      summary: 'Method for get list all referral users'
      description: 'Get referral users'
      operationId: e7922ec05afd550e7ab0a81ab7188be0
      parameters:
        -
          name: 'sort[by]'
          in: query
          description: 'Sort by field (....)'
          required: false
          schema:
            type: string
        -
          name: 'sort[order]'
          in: query
          description: 'Sort order (asc, desc)'
          required: false
          schema:
            type: string
        -
          name: search
          in: query
          description: 'Search keywords'
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          description: 'Number of page'
          required: false
          schema:
            type: integer
        -
          name: limit
          in: query
          description: 'Items per page'
          required: false
          schema:
            type: integer
        -
          name: bulk
          in: query
          description: 'Bulk filter'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
  '/admin/referrals-list/{id}':
    get:
      tags:
        - Admin
      summary: 'Get detail info about user'
      description: 'Get detail info about user'
      operationId: 56bf8f8e906adebd135fe9895fddd73f
      parameters:
        -
          name: id
          in: path
          description: 'User ID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Data of user'
        '404':
          description: 'User not found'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'code of error', type: string }, message: { description: 'error message', type: string } }, type: object }
                type: object
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
  /landing-pages:
    get:
      tags:
        - 'Landing pages'
      summary: 'LandingPage Controller'
      description: 'Get all user''s landing pages'
      operationId: d1eb0914501edb35a61e9a8401edee9c
      responses:
        '200':
          description: 'List of all landing pages'
        '401':
          description: Unauthorized
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
    post:
      tags:
        - 'Landing pages'
      summary: 'Landing page Controller'
      description: 'Save landing page'
      operationId: b1a8aa865ef510201b04eaf564226872
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: 'Landing Page ID. Empty for new page'
                  type: integer
                  example: '1'
                template_id:
                  description: 'Template id for new page'
                  type: integer
                  example: ''
              type: object
      responses:
        '200':
          description: 'Save successfull'
        '401':
          description: Unauthorized
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
  /leaderboard:
    get:
      tags:
        - Leaderboard
      summary: 'A list of leaders in the invitation referrals'
      description: 'A list of leaders in the invitation referrals'
      operationId: 25afcdc0507734b8e41a66076d3947f9
      parameters:
        -
          name: limit
          in: query
          description: 'Limit liderboard of page'
          schema:
            type: number
        -
          name: page
          in: query
          description: 'Count leaderboard of page'
          schema:
            type: number
        -
          name: graph_filtr
          in: query
          description: 'Sort option for the graph. Possible values: week, month, year'
          schema:
            type: string
      responses:
        '200':
          description: 'TOP 1000 of leaders in the invitation referrals'
          content:
            application/json:
              schema:
                properties:
                  links: { properties: { id: { description: 'user uuid', type: string, example: fd069ebe-cdea-3fec-b1e2-ca5a73c661fc }, user_id: { description: 'user id', type: string, example: edd72fdb-c83c-3e27-9047-d840e8745c61 }, username: { description: username, type: string, example: Lonzo }, amount: { description: 'Number of invited users', type: integer, example: 100 }, reward: { description: 'Amount of remuneration', type: double, example: 50.5 }, is_current: { description: 'Determine the user who made the request', type: boolean } }, type: object }
                  informer: { properties: { rank: { description: 'User rating place', type: integer, example: 1000000000 }, reward: { description: 'How much user earned', type: integer, example: 7 }, grow_this_month: { description: '', type: integer, example: 100000 } }, type: object }
                type: object
        '401':
          description: Unauthorized
        '400':
          description: 'Invalid request'
        '404':
          description: 'User not found'
        '500':
          description: 'Unknown error'
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
  /referral-codes:
    get:
      tags:
        - 'Referral Code'
      summary: 'Get referral codes and links'
      description: 'Get all user''s referral codes and links'
      operationId: d134da0bad7f9bdcb7d56b337622d9f6
      parameters:
        -
          name: application_id
          in: query
          description: 'Application ID'
          required: false
          schema:
            type: string
            default: app.sumra.wallet
      responses:
        '200':
          description: 'The list of referral codes has been displayed successfully'
        '401':
          description: Unauthorized
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
    post:
      tags:
        - 'Referral Code'
      summary: 'Create link and code for an existing user'
      description: 'Create link and code for an existing user'
      operationId: cb4f258ab5866e357f689c091bbc5221
      requestBody:
        content:
          application/json:
            schema:
              properties:
                application_id:
                  description: 'Application ID'
                  type: string
                  maximum: 36
                  example: app.sumra.chat
                is_default:
                  description: 'Is Defailt referral code / link. Accept 1, 0, true, false'
                  type: boolean
                  example: 'false'
                note:
                  description: 'Note about referral code'
                  type: string
                  example: 'Code for facebook'
              type: object
      responses:
        '200':
          description: 'Success create link and code'
        '401':
          description: Unauthorized
        '400':
          description: 'Invalid request'
        '404':
          description: 'Not found'
          content:
            application/json:
              schema:
                properties:
                  code: { description: 'Your request requires the valid parameters', type: string }
                type: object
        '500':
          description: 'Unknown error'
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
  '/referral-codes/{id}':
    get:
      tags:
        - 'Referral Code'
      summary: 'Show one code and link'
      description: 'Show referral code and link'
      operationId: ac93f3ff9efe27bd5382e44b961f2ef2
      parameters:
        -
          name: id
          in: path
          description: 'ID referral code'
          required: true
          schema:
            type: string
          example: '1'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
    put:
      tags:
        - 'Referral Code'
      summary: 'Update referral link and code.'
      description: 'Update referral code and link'
      operationId: 4aedbde1bc05c7d4de553674a4f42537
      parameters:
        -
          name: id
          in: path
          description: 'Referral code ID'
          required: true
          schema:
            type: string
          example: 93f49909-a6ba-4812-b507-e5eb08a3cb9d
      requestBody:
        content:
          application/json:
            schema:
              properties:
                is_default:
                  description: 'Is Defailt referral code / link. Accept 1, 0, true, false'
                  type: boolean
                  example: 'false'
                note:
                  description: 'Note about referral code'
                  type: string
                  example: ''
              type: object
      responses:
        '200':
          description: 'Save successfull'
        '401':
          description: Unauthorized
        '500':
          description: 'Unknown error'
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
    delete:
      tags:
        - 'Referral Code'
      summary: 'Remove referral code'
      description: 'Delete referral code'
      operationId: fe47c57312bd26d839c3d1dca1291024
      parameters:
        -
          name: id
          in: path
          description: 'Delete referral code by ID'
          required: true
          schema:
            type: string
          example: 93f49909-a6ba-4812-b507-e5eb08a3cb9d
      responses:
        '200':
          description: Success
        '404':
          description: 'Referral code not found'
          content:
            application/json:
              schema:
                properties:
                  code: { description: 'Code of error', type: string }
                  message: { description: 'Error message', type: string }
                type: object
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
  '/referral-codes/{id}/default':
    put:
      tags:
        - 'Referral Code'
      summary: 'Change the default link'
      description: 'Set new referral code and link'
      operationId: 6c2e4b7a0c547435d698413e37edf36b
      parameters:
        -
          name: id
          in: path
          description: 'ID of referral code'
          required: true
          schema:
            type: string
          example: 93f49909-a6ba-4812-b507-e5eb08a3cb9d
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
  /referrals:
    get:
      tags:
        - Referrals
      summary: 'List all referrals for current user'
      description: 'List all referrals for current user'
      operationId: 0714ffd4be78db04012e1dce276fd83f
      parameters:
        -
          name: limit
          in: query
          description: 'Limit referrals of page'
          schema:
            type: number
        -
          name: page
          in: query
          description: 'Count referrals of page'
          schema:
            type: number
        -
          name: search
          in: query
          description: 'Search keywords'
          schema:
            type: string
      responses:
        '200':
          description: 'Success getting list of referrals'
        '401':
          description: Unauthorized
        '400':
          description: 'Invalid request'
        '404':
          description: 'not found'
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
    post:
      tags:
        - Referrals
      summary: 'Joining a new user to the referral program in the presence of the referral code of the inviter'
      description: 'Joining a new user to the referral program in the presence of the referral code of the inviter'
      operationId: 40c86da44ab6af7735281d131828eb0a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                application_id:
                  description: 'ID of the service whose link the user clicked on'
                  type: string
                  maximum: 50
                  example: net.sumra.chat
                referral_code:
                  description: 'Referral code of the inviting user'
                  type: string
                  maximum: 8
                  minimum: 8
                  example: 1827oGRL
              type: object
      responses:
        '200':
          description: 'Success get or generate referrer invite code'
        '401':
          description: Unauthorized
        '400':
          description: 'Invalid request'
        '404':
          description: 'not found'
          content:
            application/json:
              schema:
                properties:
                  code: { description: 'Your request is missing a required parameter - Code', type: string }
                type: object
      security:
        -
          default:
            - ManagerRead
            - User
            - ManagerWrite
      x-auth-type: 'Application & Application User'
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: 'false'
components:
  securitySchemes:
    default:
      type: oauth2
      description: 'Auth Scheme'
      flows:
        implicit:
          authorizationUrl: 'https://sumraid.com/oauth2'
          scopes:
            ManagerRead: 'Manager can read'
            User: 'User access'
            ManagerWrite: 'Manager can write'
